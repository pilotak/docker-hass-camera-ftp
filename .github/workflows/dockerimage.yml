name: Docker Build/Publish Image

on:  
  push:
    branches:
      - master
    tags:
      - v*

jobs:   
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: pilotak/hass-camera-ftp
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_TARGET_PLATFORM: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64

    steps:    
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v2
        with:
          buildx-version: latest
          skip-cache: false
          qemu-version: latest

      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}
          echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}
          
      - name: Buildx
        if: success() && env.CREATE_RELEASE == 'false'
        run: |
          docker buildx build \
            --platform ${{ steps.prepare.outputs.docker_platform }} \
            --file ./Dockerfile .
        
      - name: Docker Login
        if: success() && env.CREATE_RELEASE == 'true'
        run: |        
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
      
      - name: Buildx & Push
        if: success() && env.CREATE_RELEASE == 'true'
        run: |
          docker buildx build \
            --platform ${{ steps.prepare.outputs.docker_platform }} \
            --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
            --file ./Dockerfile \
            --push .